typedef struct Date Date;
typedef struct Time Time;
typedef struct Passenger Passenger;
typedef struct Flight Flight;
typedef struct Flights Flights;
typedef struct Passengers Passengers;
int switchboard(Flight ** flights, Passenger ** passengers, int *flight_count, int *passenger_count);
int get_int(char *prompt);
Date get_date(char *prompt);
int valid_date(Date new);
Time get_time(char *prompt);
int valid_time(Time new);
void add_flight(Flight **flights, int *flight_count);
void get_locations(Flight *new, char *destination, char *origin);
void get_dates(Flight *new, char *departure, char *arrival);
int valid_dates(Date departure, Date arrival);
void get_times(Flight *new, char *departure, char *arrival);
int valid_times(Flight *new, Time departure, Time arrival);
void add_flight_node(Flight **flights, Flight *new);
void add_flight_head(Flight **flights, Flight *new);
void add_flight_tail(Flight **flights, Flight *new);
void edit_flight(Flight **flights);
Flight *found_flight(Flight **flights, int ID);
void view_flight(Flight *flight);
Flight *flightcpy(Flight *flight);
void view(Flight **flights);
void del_flight(Flight **flights, int *flight_count);
void del_flight_node(Flight **flights, Flight *flight);
void del_flight_head(Flight **flights);
void del_flight_tail(Flight **flights);
void add_passenger(Passenger **passengers, int *passenger_counter);
Passenger *found_passenger(Passenger **passengers, int ID);
void get_names(Passenger *new, char *prompt0, char *prompt1);
void add_passenger_node(Passenger **passengers, Passenger *new);
int passenger_cmp(Passenger *new, Passenger *passenger);
void add_passenger_head(Passenger **passengers, Passenger *new);
void add_passenger_tail(Passenger **passengers, Passenger *new);
